<<<2019 11/18>>>

도착하면 출첵



-> 1월부터 리스팅  ->  대충 3월부터 공채뜸


it에서 가장 중요한 요소  ->   기술





6개월 끝나고 적성에 맞냐 안맞냐 정해도 됨






수업 후 강의실 개방 ->  12월부터 월,수(필요하면 금 포함)



원장 김길수
010-5290-0194

kkilsoo@hanmail.net


오규진
010-3474-1659



생산성본부에서 나오신분
조덕주 위원
010 6258 4125




https://post.naver.com/viewer/postView.nhn?volumeNo=26872820




자바 -> 성영한



웹하려면 html + css + javascript
데이터베이스  -> 마리아DB


**리눅스 해야됨**


깃 많이 쓸거임
세팅하는거 잘 이해햐야됨



빅데이터분석 자격증있음

->   ADSP


자격증 정보처리기사, ADSP , 아마존aws


설치해야 하는것

jre downlaod      ->  https://java.com/ko/download/windows-64bit.jsp
eclipse downolaod ->  https://www.eclipse.org/downloads/packages/release/mars/r/eclipse-ide-java-ee-developers
jdk 11 download   ->  https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html
jdk는 드롭박스에 올려져있음  oracle 회원가입 안됨




https://www.hackerrank.com/  ->   코딩테스트 연습
-> 알고리즘 easy에서만 나옴(언어는 아무거나)




코딩테스트는 기본기가 있는지없는지  ->  알고리즘만

면접은  ->  프로젝트등으로





내컴퓨터 오른쪽클릭 -> 속성 ->고급시스템설정 -> 고급 -> 환경변수 -> 시스템변수에서 path더블클릭
-> 기존의 변수값에 세미콜론 붙이고 뒤에 붙여넣기(bin파일 경로 -> )




IDE  -> 통합개발환경
단축키 잘알아야함





정보처리기사 + 경력 2,3년 -> 기술사 자격시험 신청가능






<<<2019 11/19>>>






자바는 자료형11개 -> 다외워야함





프로젝트명에 오른쪽클릭 -> 프로퍼티 -> 리소스에서 text file encoding -> other -> utf-8





http://me2.do/GkQ1Etxu  -> 여기들어가면 수강생정보, 다운로드, 단축키, 유니코드, 아스키코드 주소 다있음

alt + 방향키 -> 지정된 코드 한줄 올렸다 내리기




java-1 

자료형 그림 외우기

byte  -128 ~ 127
short 32000정도
int   21억 정도
long  아주크다

byte,short는 연산을 하면 int로 바뀌어버림 -> 다시 바꿔주기가 귀찮음 그래서 그냥 int씀


escape char  -> ', ", \



public static void main(String[] args)  이거 연습  -> 메크로( ctrl + space -> m )



오버플로우될때 일어나는 현상 2가지
-> 서킷, 커팅




코드 정리하는 기술 -> refactoring -> 책사서보면 좋음(실력 좋아지면)

마틴 파울러 - refactoring











자바 - 알고리즘 - 리펙토링 - 디자인, 패턴정리


책구입할때

이론, 실습, 프로젝트 -> 3권




@@@연산자기본순서 외우기




("1"+2+3+4) -> ("12"+3+4) -> ("123"+4) 이런식
("1"+(2+3+4+5)) -> ("1"+14) -> ( 114 )









<<<11/20>>>


달력

4년마다 윤년, 100년단위로 윤년x,  400년마다 윤년

1900년 1월 1일 -> 월요일

누적계수
1월 - 1
2월 - 4
3월 - 4
4월 - 0
5월 - 2
6월 - 5
7월 - 0
8월 - 3
9월 - 6
10월 - 1
11월 - 4
12월 - 6



premitive == premitive
premitive != premitive

 -> 값만비교


if  -> ctrl + space
for -> ctrl + space


switch문에서는 레퍼런스, 더블같은 자료형이 올수가 없음


처리할 문장들, break -> 없어도 됨 


ctrl + alt + 방향키 위아래  -> 해당줄의 코드를 바로 복사해서 방향키 방향에 붙여넣기





ctrl + shift + f  -> 코드예쁘게 정렬하는 단축키



***자바는 웹을 만들수있는정도면 됨














git init -> master 생성
rm -rf .git/ -> master 지우기
 



git user.emai "sbskh11@gmail.com"
git user.name "bong199119"




git 디렉토리 설정
git add.
git status
git commit -m "20191120-v1"




git 올리고 내려받는거 연습





<<11/21>>







***실제 개발할때는 배열안쓰고 collection씀



배열
-> 선언, 값 집어넣기, 값 빼오는것 주의해서 공부!



length    ->  배열의 길이
length()  -> 문자열의 길이


//enhanced for loop
		for(int temp : b){
			System.out.println(temp);
		}
		

enhanced for문은 자료형이 다같아야하기때문에 배열은 가능(배열은 자료형이 일정하므로)

collection 은 특성상 다양한 자료형이 들어갈수 있기때문에 쓰기 힘들다.







//run configuration 에서  args에 숫자받을때

int num = Integer.parseInt(args[0]);




(버블 소트)오름차순, 내림차순 정리




***알고리즘은 이해하고, 패턴을 외우고 툭튀어나올정도가 되어야 함
   -> 반복 반복






주석달때 전체 선택하고  ->   ctrl + shift + /






git 올릴때 add -> commit -> push




<<<11/22>>>


객체마다 구성요소가 다다름

구성요소  -  멤버변수
기능  -  메서드



오브젝트 -> 고객을 만나야 알수있다.


오브젝트 뽑고 -> 추상화 -> class 만들기

class할때에는 encapsulation 주의



추상클래스의 다형성, 인터페이스의 다형성등 해본적이 있는가



클래스의 종류는 3개

파이널 클래스
머브스트랙트 클래스
그냥 클래스





기본적으로 1개의 자바파일안에 클래스 1개있음





클래스에서

공용변수 -> 스태틱

final은 한번정해지면 못바꿈
상수이기 때문에

대부분  static final 형식이다.


final변수는 관례상 대문자를 쓰는것이 원칙!
-> public static final String BANKNAME = "신한은행";



클래스는 그림 그려가면서 이해하기 + 공부하기

클래스의 접근한정자 public or default




main에 로직을짜면 안되다!!!!


static 남발하면 메모리 낭비!


절차지형 언어들(예로 C) 오버로딩 안됨 이름이 같을 수 없음 다형성 지원X


***자바에서 3가지 중요한것! = 클래스, 컬랙션, 데이터베이스 + I/O


length()  ->  문자열의 길이
length -> 배열의 길이





나만의 유틸리티클래스 만들어서 쌓기 공개X, 자기만 가지고있기, 
클래스파일만 보여줌(자바파일은 공개가 안됨)

다 공개하고도 따라올수 없는 실력을 쌓자!



객체생성 하기싫을때 -> 1. 모든메서드 static  (객체생성필요가 없음) 
		       2. singleton 객체  (객체생성 제한)




웹할때는 상속이 별의미가 없다

하지만 상속을 알면 oop적인 생각 큰그림 그리기 쉬워짐, api사용 편함





디폴트 생성자 단축키  ->  alt + shift + s  ->  c -> 엔터




오버로딩  -> 한 클래스 내에서 메서드 이름이나 생성자 중첩
오버라이딩 -> 부모의 기능을 재정의 할때 쓰는것 (상속관계 필수!)




강사님 깃허브
-> https://github.com/syh1011/Java_Fundamental




시험문제

1.  식별자의 규칙을 2가지 이상을 쓰시오

2.  자바 자료형 11가지를 쓰시오

3.  int a = (int) 123.45; 다음 결과는?

4.  다음의 결과는 컴파일 에러가 발생한다.
    컴파일 에러를 발생하ㅣ 않기 위해서는 어떻게 해야할까?
   
    byte a = 10;
    byte b = 20;
    byte c = a+b;
    System.out.println(c);

5.  1부터 100까지 홀수의 합을 구하시오

6.  10개의 방이 있는 int 배열 객체를 생성하시오

7.  length, length() 차이점을 작성하시오

8.  oop의 6가지 특징을 쓰시오
 
9.  클래스의 종류 3가지를 작성하시오  
 
10. 클래스의 구성요소 3가지를 작성하시오



인터페이스 -> 다중상속가능(부모가 여럿)
	   -> 모든항목 공개(public임 모든 변수,메서드)

class -> 단일상속밖에 안됨




일반클래스가 추상클래스에서 상속받으면 추상 메서드는 반드시 오버라이딩 해야함!
(추상변수는 없으니까 걱정 노노)

추상클 -> 추상클일때에는 반드시 오버라이딩 할 필요는 없음.



import java.util.Date;
import java.util.*;

위에 두개는 실행속도와 아무 관계가 없다 (임포트속도와 실행속도는 별개)




컬랙션 -> 자료구조랑같음




**** int a =  integer.parseint("10");


java 5.0 이상에서는
-> Integer i1 = 10; 가능






Integer i1 = 10; // 오토박싱
Integer i2 = 20;

int a = i1 + i2; // 오토 언박싱됨





Integer i = new Integer(10)  -> 10불변임 바뀌지않는다.

String도 마찬가지


String s1 = new String("a")
String s2 = new String("a")

***  s1 == s2  -> false
***  s1.equals(s2) -> true (오버라이딩 되어있음!  + 해시코드도 오버라이딩 되어있음)





문자열 연결은  ->  스트링버퍼가 있음




immutable  -> wrapper, string 2개

call by reference로 안바뀜




import 전부시키기 ->  ctrl + shift + o



컬랙션은 크기잴때 사이즈로 잰다.
ex) -> set.size()




oop적으로 만들기 이번주 숙제

달력 매개변수 3개 -> 년월일
매개변수 2개 -> 월일







error -> 주로 하드웨어적인 문제


exception -> 소프트웨어적인 문제(우리가 알아야함!) 
런타임하고 나머지로 나누어진다(두가지 종류로 나눠짐)



런타임exception -> 실행도중 에러남 -> 어려운 에러
이외의exception -> 실행전에 에러남 -> 쉬운에러 (어디가 잘못됬는지 말해주니까)



예외처리를 안해주면 JVM에게 물어본다 (어디가 잘못됬는지)
-> JVM이 에러를 잡으면 프로그램 종료시켜버림
-> 그러니까 에러잡는것을 JVM에 맡기면 안됨!



런타임EXCEPTION -> 예외처리 해도되고 안해도됨
이외의EXCEPTION -> 예외처리 반드시 해야됨



사용자한테서 입력받는 부분을 예외처리!



try-catch를 메인에 몰아주기


상황에 맞는 예외를 만들어서 사용하는 경우가 종종있음




*** 인터페이스는 생성자 없음




스레드란 프로세스 내에서 실행되는 세부의 작업단위






년도, 월, 일 3개받으면 -> 요일 내주고

년도, 월 2개 받으면 월달력

년도 입력받으면 년달력

 


*** 이너클래스는 접근한정자 4개 다쓸수 있음
*** 메서드안에 클래스 올 수 있음 (gui에서 씀) -> 로컬 클래스




쓰레드 라이프사이클 그림보면서 이해하기

쓰레드 new(생성) -> runnable(대기  예를들어 99개의 스레드가 생성되면 98개가 runnabel에서 대기)
-> running에서 실행(1개만) => 순서조정은 scheduler가 한다!




파일종류 2가지 알기
-> 텍스트파일, 바이너리파일
-> 자바에서 둘다 입출력 따로 있음


바이너리 -> 이미지, exe, pdf 등등




****파일클래스 중요함!!!!!!!!!






system.in 의 반환값 ->  inputstream

sytem.out 의 반환값 ->  printstream






크롤링할때 쓰는 jsoup파일 다운받는곳
https://jsoup.org/download





nslookup -> dns들어가는것



TCP -> 연결이 끊기지 않으면서 주고받고 신뢰할 수 있는 프로토콜
UDP -> 일방성 통신(보내고 끊김) 신뢰할 수 없는 프로토콜


oop적인 마인드 -> 재사용




URL클래스는 2가지 용법

-> URL결과페이지 가져오는것
-> protocol, host, port등을 가져올수있음




서버를 열어놓으면 포트를 항상 열어놓아야 한다.
이때 로컬포트검색은 public Socker(String host, int port)으로







1.소켓서버 만들기
2.accept- > 대기 & 반환되는값은 socket


쓰레드스타트 2가지방법 잘알아두기



****** mariadb
****** 인설트, 델리트, 셀렉트 잘해야함


SQL => Structured Query Language



CRUD -> 데이터 넣고 삭제하고 수정하는 프로그램

create = insult
Retrieve = select
update = update
delete = delete



JDBC -> 자바에서 데이터 베이스에 접근하는 프로그램 
-> java database connectivity
-> SQL을 잘만드는게 핵심
-> 컬랙션을 잘하는게 핵심(ArrayList())



3tier client, server, database
2tier client, database
1tier database



jsp -> 주목적 DB연결


select* -> 쓰지말기( 다 가져올때 쓰지만 데이터셋의 변동이 있을때 오류날 수 있음)
IN(10,20) -> 쓰지 말기 데이터 많을 때 


SELECT LPAN -> 중요



매우중요 꼭외워야
SELECT DATE_FORMAT(now(),'%Y-%m-%d %p %h:%i:%s %W');

SELECT now()

SELECT ADDDATE(NOW(),INTERVAL 2 DAY);

SELECT SUBDATE(NOW(),INTERVAL 2 HOUR);



primary key -> null을 허용하지않고 유일한 값


select avg(nvl(comm,0))
-> 값이 null인사람들도 카운트 다해서 나눠줌 


{
create table customer
name varcher(10)

create table member
name varcher(10)
}
-> 절대 쓰지않는다 예를들어 join을 하게 되면 문제발생!!

-> 따라서 


{
create table customer
crename varcher(10)

create table member
memname varcher(10)
}

-> 이런 식으로 이름을 좀 길게 써주는게 좋음!!!!!



left조인 기억하기


업데이트 기억하기

UPDATE member
SET addr = '한국';
WHERE num = 4;


델리트

DELETE FROM
테이블명
WHERE
조건절




여러개의 작업단위를 마치하나의 작업단위로 묶어주는 작업 -> transaction

하나하나의 작업단위 -> 오퍼레이션

작업단위를 모두 수행하는것 -> 커밋
작업단위를 모두 수행하지 않는것 -> 롤백



***** 자바에서 트랜스액션 꼭 해달라고 말하기


insert update delete는 갱신된 행의수를 리턴한다.



자바 - DB연결 순서

1. 드라이브 로드
2. 마리아 디비에 연결
3. prepareStatement 객체 생성
4. 바인딩 변수 설정
5. 전송


*** DAO클래스는 싱글턴 패턴으로 코딩해줌
-> 데이터베이스에 부담이 가지않도록!!!!!




처음해야하는것 

EMP DTO만들기!
생성자만들기
세터게터 만들기



singleton 외우기!!!!

deptdao에서 생성자를 private로 놓으면 deptdemo에서 new가 안됨! 
같은 클래스 내에서는 생성가능


deptdao d = deptdao.getInstance();
deptdao d1 = deptdao.getInstance(); -> 이런식으로 만들어야함




셀렉트 한거 0번째부터 5개(길이)를 가져옴
SELECT empno, ename, job, mgr, hiredate, sal, comm, deptno
FROM emp
ORDER BY hiredate DESC
LIMIT 0,5









@@@ parse, value of 등등 함수 찾아서 정리

@@@ 컬랙션 공부 많이 하기(ArrayList)

@@@ 문자열 함수 다외우기!!!!! 완벽하게!!!! 매우중요!!!!

@@@ calendar 코딩한거 다시해보도 반복하고 이해하기!!! 매우중요****

@@@ step 반복, 이해

@@@ setter, getter 원리 이해하고 많이 반복하기!!!!

@@@ 공책에 찝을거 프린트 하기 

@@@ 다이아 별로 찍어보기

@@@ 구구단 for문을  while 문으로 바꾸기

@@@ 기업타게팅
상2개
중2개
선정하기

@@@ 카카오, 네이버 코딩테스트 찾아보기

@@@ 2,3월쯤 공모전 뜸

@@@ [도서] 쉽게 배우는 소프트웨어 공학 -IT COOKBOOK192

김치수 저 | 한빛아카데미 | 2015년 11월



-----------------------------------------------------------------------------------------------




이클립스 글씨크기 조정

window > preferences >  general > appearance > colors and font > basic > text font

> edit  원하는 크기로 설정.




깃경로 지우기
-> 이클립스에서 디스커넥트 -> 배쉬에서 $ cd Java_Fundamental여기 가서 $ rm -rf .git 해서
master를 지워준다.

생성
-> 깃허브에서 뉴리파지토리 생성







